{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\JHON\\\\Documents\\\\MEGA\\\\LABURO\\\\aumio\\\\challenge-01\\\\Aumionista\\\\node_modules\\\\react-native-navigation\\\\lib\\\\dist\\\\adapters\\\\TouchablePreview.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TouchablePreview = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar PREVIEW_DELAY = 350;\nvar PREVIEW_MIN_FORCE = 0.1;\nvar PREVIEW_TIMEOUT = 1250;\n\nvar TouchablePreview = function (_React$PureComponent) {\n  _inherits(TouchablePreview, _React$PureComponent);\n\n  var _super = _createSuper(TouchablePreview);\n\n  function TouchablePreview() {\n    var _this;\n\n    _classCallCheck(this, TouchablePreview);\n\n    _this = _super.apply(this, arguments);\n    _this.touchStartedAt = 0;\n    _this.onRef = React.createRef();\n\n    _this.onPress = function () {\n      var onPress = _this.props.onPress;\n\n      if (typeof onPress !== 'function' || TouchablePreview.peeking) {\n        return;\n      }\n\n      return onPress();\n    };\n\n    _this.onPressIn = function () {\n      if (react_native_1.Platform.OS === 'ios') {\n        var onPressIn = _this.props.onPressIn;\n\n        if (!onPressIn) {\n          return;\n        }\n\n        var reactTag = react_native_1.findNodeHandle(_this.onRef.current);\n        return onPressIn({\n          reactTag: reactTag\n        });\n      }\n\n      return null;\n    };\n\n    _this.onTouchStart = function (event) {\n      _this.touchStartedAt = event.nativeEvent.timestamp;\n    };\n\n    _this.onTouchMove = function (event) {\n      clearTimeout(_this.timeout);\n      var _event$nativeEvent = event.nativeEvent,\n          force = _event$nativeEvent.force,\n          timestamp = _event$nativeEvent.timestamp;\n      var diff = timestamp - _this.touchStartedAt;\n\n      if (force > PREVIEW_MIN_FORCE && diff > PREVIEW_DELAY) {\n        TouchablePreview.peeking = true;\n\n        if (typeof _this.props.onPeekIn === 'function') {\n          _this.props.onPeekIn();\n        }\n      }\n\n      _this.timeout = setTimeout(_this.onTouchEnd, PREVIEW_TIMEOUT);\n    };\n\n    _this.onTouchEnd = function () {\n      clearTimeout(_this.timeout);\n      TouchablePreview.peeking = false;\n\n      if (typeof _this.props.onPeekOut === 'function') {\n        _this.props.onPeekOut();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TouchablePreview, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          touchableComponent = _this$props.touchableComponent,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"touchableComponent\"]);\n\n      var Touchable = react_native_1.Platform.OS === 'ios' && touchableComponent instanceof react_native_1.TouchableNativeFeedback ? react_native_1.TouchableWithoutFeedback : touchableComponent;\n      return React.createElement(Touchable, _extends({}, props, {\n        ref: this.onRef,\n        onPress: this.onPress,\n        onPressIn: this.onPressIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }), React.createElement(react_native_1.View, {\n        onTouchStart: this.onTouchStart,\n        onTouchMove: this.onTouchMove,\n        onTouchEnd: this.onTouchEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n\n  return TouchablePreview;\n}(React.PureComponent);\n\nexports.TouchablePreview = TouchablePreview;\nTouchablePreview.propTypes = {\n  children: PropTypes.node,\n  touchableComponent: PropTypes.func,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPeekIn: PropTypes.func,\n  onPeekOut: PropTypes.func,\n  label: PropTypes.string\n};\nTouchablePreview.defaultProps = {\n  touchableComponent: react_native_1.TouchableWithoutFeedback\n};\nTouchablePreview.peeking = false;","map":{"version":3,"sources":["C:/Users/JHON/Documents/MEGA/LABURO/aumio/challenge-01/Aumionista/node_modules/react-native-navigation/lib/dist/adapters/TouchablePreview.js"],"names":["Object","defineProperty","exports","value","TouchablePreview","tslib_1","require","React","__importStar","PropTypes","PREVIEW_DELAY","PREVIEW_MIN_FORCE","PREVIEW_TIMEOUT","arguments","touchStartedAt","onRef","createRef","onPress","props","peeking","onPressIn","react_native_1","Platform","OS","reactTag","findNodeHandle","current","onTouchStart","event","nativeEvent","timestamp","onTouchMove","clearTimeout","timeout","force","diff","onPeekIn","setTimeout","onTouchEnd","onPeekOut","children","touchableComponent","Touchable","TouchableNativeFeedback","TouchableWithoutFeedback","PureComponent","propTypes","node","func","label","string","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TouchablePreview = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst PropTypes = tslib_1.__importStar(require(\"prop-types\"));\nconst react_native_1 = require(\"react-native\");\nconst PREVIEW_DELAY = 350;\nconst PREVIEW_MIN_FORCE = 0.1;\nconst PREVIEW_TIMEOUT = 1250;\nclass TouchablePreview extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.touchStartedAt = 0;\n        this.onRef = React.createRef();\n        this.onPress = () => {\n            const { onPress } = this.props;\n            if (typeof onPress !== 'function' || TouchablePreview.peeking) {\n                return;\n            }\n            return onPress();\n        };\n        this.onPressIn = () => {\n            if (react_native_1.Platform.OS === 'ios') {\n                const { onPressIn } = this.props;\n                if (!onPressIn) {\n                    return;\n                }\n                const reactTag = react_native_1.findNodeHandle(this.onRef.current);\n                return onPressIn({ reactTag });\n            }\n            // Other platforms don't support 3D Touch Preview API\n            return null;\n        };\n        this.onTouchStart = (event) => {\n            // Store a timestamp of the initial touch start\n            this.touchStartedAt = event.nativeEvent.timestamp;\n        };\n        this.onTouchMove = (event) => {\n            clearTimeout(this.timeout);\n            const { force, timestamp } = event.nativeEvent;\n            const diff = timestamp - this.touchStartedAt;\n            if (force > PREVIEW_MIN_FORCE && diff > PREVIEW_DELAY) {\n                TouchablePreview.peeking = true;\n                if (typeof this.props.onPeekIn === 'function') {\n                    this.props.onPeekIn();\n                }\n            }\n            this.timeout = setTimeout(this.onTouchEnd, PREVIEW_TIMEOUT);\n        };\n        this.onTouchEnd = () => {\n            clearTimeout(this.timeout);\n            TouchablePreview.peeking = false;\n            if (typeof this.props.onPeekOut === 'function') {\n                this.props.onPeekOut();\n            }\n        };\n    }\n    render() {\n        const { children, touchableComponent, ...props } = this.props;\n        // Default to TouchableWithoutFeedback for iOS if set to TouchableNativeFeedback\n        const Touchable = react_native_1.Platform.OS === 'ios' && touchableComponent instanceof react_native_1.TouchableNativeFeedback\n            ? react_native_1.TouchableWithoutFeedback\n            : touchableComponent;\n        // Wrap component with Touchable for handling platform touches\n        // and a single react View for detecting force and timing.\n        return (\n        /**\n         * @TODO (Jin Shin 25 June 2020)\n         * Ignoring this for now so that it builds.\n         */\n        // @ts-ignore\n        <Touchable {...props} ref={this.onRef} onPress={this.onPress} onPressIn={this.onPressIn}>\n        <react_native_1.View onTouchStart={this.onTouchStart} onTouchMove={this.onTouchMove} onTouchEnd={this.onTouchEnd}>\n          {children}\n        </react_native_1.View>\n      </Touchable>);\n    }\n}\nexports.TouchablePreview = TouchablePreview;\nTouchablePreview.propTypes = {\n    children: PropTypes.node,\n    touchableComponent: PropTypes.func,\n    onPress: PropTypes.func,\n    onPressIn: PropTypes.func,\n    onPeekIn: PropTypes.func,\n    onPeekOut: PropTypes.func,\n    label: PropTypes.string,\n};\nTouchablePreview.defaultProps = {\n    touchableComponent: react_native_1.TouchableWithoutFeedback,\n};\nTouchablePreview.peeking = false;\n"]},"metadata":{},"sourceType":"script"}