{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigationRoot = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar isArray_1 = tslib_1.__importDefault(require(\"lodash/isArray\"));\n\nvar NativeCommandsSender_1 = require(\"./adapters/NativeCommandsSender\");\n\nvar NativeEventsReceiver_1 = require(\"./adapters/NativeEventsReceiver\");\n\nvar UniqueIdProvider_1 = require(\"./adapters/UniqueIdProvider\");\n\nvar Store_1 = require(\"./components/Store\");\n\nvar OptionProcessorsStore_1 = require(\"./processors/OptionProcessorsStore\");\n\nvar ComponentRegistry_1 = require(\"./components/ComponentRegistry\");\n\nvar Commands_1 = require(\"./commands/Commands\");\n\nvar LayoutTreeParser_1 = require(\"./commands/LayoutTreeParser\");\n\nvar LayoutTreeCrawler_1 = require(\"./commands/LayoutTreeCrawler\");\n\nvar EventsRegistry_1 = require(\"./events/EventsRegistry\");\n\nvar CommandsObserver_1 = require(\"./events/CommandsObserver\");\n\nvar Constants_1 = require(\"./adapters/Constants\");\n\nvar ComponentEventsObserver_1 = require(\"./events/ComponentEventsObserver\");\n\nvar TouchablePreview_1 = require(\"./adapters/TouchablePreview\");\n\nvar ComponentWrapper_1 = require(\"./components/ComponentWrapper\");\n\nvar OptionsProcessor_1 = require(\"./commands/OptionsProcessor\");\n\nvar ColorService_1 = require(\"./adapters/ColorService\");\n\nvar AssetResolver_1 = require(\"./adapters/AssetResolver\");\n\nvar AppRegistryService_1 = require(\"./adapters/AppRegistryService\");\n\nvar Deprecations_1 = require(\"./commands/Deprecations\");\n\nvar LayoutProcessor_1 = require(\"./processors/LayoutProcessor\");\n\nvar LayoutProcessorsStore_1 = require(\"./processors/LayoutProcessorsStore\");\n\nvar NavigationRoot = function () {\n  function NavigationRoot() {\n    _classCallCheck(this, NavigationRoot);\n\n    this.TouchablePreview = TouchablePreview_1.TouchablePreview;\n    this.componentWrapper = new ComponentWrapper_1.ComponentWrapper();\n    this.store = new Store_1.Store();\n    this.optionProcessorsStore = new OptionProcessorsStore_1.OptionProcessorsStore();\n    this.layoutProcessorsStore = new LayoutProcessorsStore_1.LayoutProcessorsStore();\n    this.nativeEventsReceiver = new NativeEventsReceiver_1.NativeEventsReceiver();\n    this.uniqueIdProvider = new UniqueIdProvider_1.UniqueIdProvider();\n    this.componentEventsObserver = new ComponentEventsObserver_1.ComponentEventsObserver(this.nativeEventsReceiver, this.store);\n    var appRegistryService = new AppRegistryService_1.AppRegistryService();\n    this.componentRegistry = new ComponentRegistry_1.ComponentRegistry(this.store, this.componentEventsObserver, this.componentWrapper, appRegistryService);\n    this.layoutTreeParser = new LayoutTreeParser_1.LayoutTreeParser(this.uniqueIdProvider);\n    var optionsProcessor = new OptionsProcessor_1.OptionsProcessor(this.store, this.uniqueIdProvider, this.optionProcessorsStore, new ColorService_1.ColorService(), new AssetResolver_1.AssetService(), new Deprecations_1.Deprecations());\n    var layoutProcessor = new LayoutProcessor_1.LayoutProcessor(this.layoutProcessorsStore);\n    this.layoutTreeCrawler = new LayoutTreeCrawler_1.LayoutTreeCrawler(this.store, optionsProcessor);\n    this.nativeCommandsSender = new NativeCommandsSender_1.NativeCommandsSender();\n    this.commandsObserver = new CommandsObserver_1.CommandsObserver(this.uniqueIdProvider);\n    this.commands = new Commands_1.Commands(this.store, this.nativeCommandsSender, this.layoutTreeParser, this.layoutTreeCrawler, this.commandsObserver, this.uniqueIdProvider, optionsProcessor, layoutProcessor);\n    this.eventsRegistry = new EventsRegistry_1.EventsRegistry(this.nativeEventsReceiver, this.commandsObserver, this.componentEventsObserver);\n    this.componentEventsObserver.registerOnceForAllComponentEvents();\n  }\n\n  _createClass(NavigationRoot, [{\n    key: \"registerComponent\",\n    value: function registerComponent(componentName, componentProvider, concreteComponentProvider) {\n      return this.componentRegistry.registerComponent(componentName, componentProvider, concreteComponentProvider);\n    }\n  }, {\n    key: \"addOptionProcessor\",\n    value: function addOptionProcessor(optionPath, processor) {\n      return this.optionProcessorsStore.addProcessor(optionPath, processor);\n    }\n  }, {\n    key: \"addLayoutProcessor\",\n    value: function addLayoutProcessor(processor) {\n      return this.layoutProcessorsStore.addProcessor(processor);\n    }\n  }, {\n    key: \"setLazyComponentRegistrator\",\n    value: function setLazyComponentRegistrator(lazyRegistratorFn) {\n      this.store.setLazyComponentRegistrator(lazyRegistratorFn);\n    }\n  }, {\n    key: \"registerComponentWithRedux\",\n    value: function registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore) {\n      console.warn('registerComponentWithRedux is deprecated and will be removed in the next version! Please use Navigation.registerComponent instead. Visit the docs for more information https://wix.github.io/react-native-navigation/api/component#registering-a-component-wrapped-with-providers');\n      return this.componentRegistry.registerComponent(componentName, getComponentClassFunc, undefined, ReduxProvider, reduxStore);\n    }\n  }, {\n    key: \"setRoot\",\n    value: function setRoot(layout) {\n      return this.commands.setRoot(layout);\n    }\n  }, {\n    key: \"setDefaultOptions\",\n    value: function setDefaultOptions(options) {\n      this.commands.setDefaultOptions(options);\n    }\n  }, {\n    key: \"mergeOptions\",\n    value: function mergeOptions(componentId, options) {\n      this.commands.mergeOptions(componentId, options);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(componentId, props) {\n      this.commands.updateProps(componentId, props);\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal(layout) {\n      return this.commands.showModal(layout);\n    }\n  }, {\n    key: \"dismissModal\",\n    value: function dismissModal(componentId, mergeOptions) {\n      return this.commands.dismissModal(componentId, mergeOptions);\n    }\n  }, {\n    key: \"dismissAllModals\",\n    value: function dismissAllModals(mergeOptions) {\n      return this.commands.dismissAllModals(mergeOptions);\n    }\n  }, {\n    key: \"push\",\n    value: function push(componentId, layout) {\n      return this.commands.push(componentId, layout);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop(componentId, mergeOptions) {\n      return this.commands.pop(componentId, mergeOptions);\n    }\n  }, {\n    key: \"popTo\",\n    value: function popTo(componentId, mergeOptions) {\n      return this.commands.popTo(componentId, mergeOptions);\n    }\n  }, {\n    key: \"popToRoot\",\n    value: function popToRoot(componentId, mergeOptions) {\n      return this.commands.popToRoot(componentId, mergeOptions);\n    }\n  }, {\n    key: \"setStackRoot\",\n    value: function setStackRoot(componentId, layout) {\n      var children = isArray_1.default(layout) ? layout : [layout];\n      return this.commands.setStackRoot(componentId, children);\n    }\n  }, {\n    key: \"showOverlay\",\n    value: function showOverlay(layout) {\n      return this.commands.showOverlay(layout);\n    }\n  }, {\n    key: \"dismissOverlay\",\n    value: function dismissOverlay(componentId) {\n      return this.commands.dismissOverlay(componentId);\n    }\n  }, {\n    key: \"getLaunchArgs\",\n    value: function getLaunchArgs() {\n      return this.commands.getLaunchArgs();\n    }\n  }, {\n    key: \"events\",\n    value: function events() {\n      return this.eventsRegistry;\n    }\n  }, {\n    key: \"constants\",\n    value: function constants() {\n      return _regeneratorRuntime.async(function constants$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Constants_1.Constants.get());\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return NavigationRoot;\n}();\n\nexports.NavigationRoot = NavigationRoot;","map":{"version":3,"sources":["C:/Users/JHON/Documents/MEGA/LABURO/aumio/challenge-01/Aumionista/node_modules/react-native-navigation/lib/dist/Navigation.js"],"names":["Object","defineProperty","exports","value","NavigationRoot","tslib_1","require","isArray_1","__importDefault","NativeCommandsSender_1","NativeEventsReceiver_1","UniqueIdProvider_1","Store_1","OptionProcessorsStore_1","ComponentRegistry_1","Commands_1","LayoutTreeParser_1","LayoutTreeCrawler_1","EventsRegistry_1","CommandsObserver_1","Constants_1","ComponentEventsObserver_1","TouchablePreview_1","ComponentWrapper_1","OptionsProcessor_1","ColorService_1","AssetResolver_1","AppRegistryService_1","Deprecations_1","LayoutProcessor_1","LayoutProcessorsStore_1","TouchablePreview","componentWrapper","ComponentWrapper","store","Store","optionProcessorsStore","OptionProcessorsStore","layoutProcessorsStore","LayoutProcessorsStore","nativeEventsReceiver","NativeEventsReceiver","uniqueIdProvider","UniqueIdProvider","componentEventsObserver","ComponentEventsObserver","appRegistryService","AppRegistryService","componentRegistry","ComponentRegistry","layoutTreeParser","LayoutTreeParser","optionsProcessor","OptionsProcessor","ColorService","AssetService","Deprecations","layoutProcessor","LayoutProcessor","layoutTreeCrawler","LayoutTreeCrawler","nativeCommandsSender","NativeCommandsSender","commandsObserver","CommandsObserver","commands","Commands","eventsRegistry","EventsRegistry","registerOnceForAllComponentEvents","componentName","componentProvider","concreteComponentProvider","registerComponent","optionPath","processor","addProcessor","lazyRegistratorFn","setLazyComponentRegistrator","getComponentClassFunc","ReduxProvider","reduxStore","console","warn","undefined","layout","setRoot","options","setDefaultOptions","componentId","mergeOptions","props","updateProps","showModal","dismissModal","dismissAllModals","push","pop","popTo","popToRoot","children","default","setStackRoot","showOverlay","dismissOverlay","getLaunchArgs","Constants","get"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NavigationRoot = void 0;\nconst tslib_1 = require(\"tslib\");\nconst isArray_1 = tslib_1.__importDefault(require(\"lodash/isArray\"));\nconst NativeCommandsSender_1 = require(\"./adapters/NativeCommandsSender\");\nconst NativeEventsReceiver_1 = require(\"./adapters/NativeEventsReceiver\");\nconst UniqueIdProvider_1 = require(\"./adapters/UniqueIdProvider\");\nconst Store_1 = require(\"./components/Store\");\nconst OptionProcessorsStore_1 = require(\"./processors/OptionProcessorsStore\");\nconst ComponentRegistry_1 = require(\"./components/ComponentRegistry\");\nconst Commands_1 = require(\"./commands/Commands\");\nconst LayoutTreeParser_1 = require(\"./commands/LayoutTreeParser\");\nconst LayoutTreeCrawler_1 = require(\"./commands/LayoutTreeCrawler\");\nconst EventsRegistry_1 = require(\"./events/EventsRegistry\");\nconst CommandsObserver_1 = require(\"./events/CommandsObserver\");\nconst Constants_1 = require(\"./adapters/Constants\");\nconst ComponentEventsObserver_1 = require(\"./events/ComponentEventsObserver\");\nconst TouchablePreview_1 = require(\"./adapters/TouchablePreview\");\nconst ComponentWrapper_1 = require(\"./components/ComponentWrapper\");\nconst OptionsProcessor_1 = require(\"./commands/OptionsProcessor\");\nconst ColorService_1 = require(\"./adapters/ColorService\");\nconst AssetResolver_1 = require(\"./adapters/AssetResolver\");\nconst AppRegistryService_1 = require(\"./adapters/AppRegistryService\");\nconst Deprecations_1 = require(\"./commands/Deprecations\");\nconst LayoutProcessor_1 = require(\"./processors/LayoutProcessor\");\nconst LayoutProcessorsStore_1 = require(\"./processors/LayoutProcessorsStore\");\nclass NavigationRoot {\n    constructor() {\n        this.TouchablePreview = TouchablePreview_1.TouchablePreview;\n        this.componentWrapper = new ComponentWrapper_1.ComponentWrapper();\n        this.store = new Store_1.Store();\n        this.optionProcessorsStore = new OptionProcessorsStore_1.OptionProcessorsStore();\n        this.layoutProcessorsStore = new LayoutProcessorsStore_1.LayoutProcessorsStore();\n        this.nativeEventsReceiver = new NativeEventsReceiver_1.NativeEventsReceiver();\n        this.uniqueIdProvider = new UniqueIdProvider_1.UniqueIdProvider();\n        this.componentEventsObserver = new ComponentEventsObserver_1.ComponentEventsObserver(this.nativeEventsReceiver, this.store);\n        const appRegistryService = new AppRegistryService_1.AppRegistryService();\n        this.componentRegistry = new ComponentRegistry_1.ComponentRegistry(this.store, this.componentEventsObserver, this.componentWrapper, appRegistryService);\n        this.layoutTreeParser = new LayoutTreeParser_1.LayoutTreeParser(this.uniqueIdProvider);\n        const optionsProcessor = new OptionsProcessor_1.OptionsProcessor(this.store, this.uniqueIdProvider, this.optionProcessorsStore, new ColorService_1.ColorService(), new AssetResolver_1.AssetService(), new Deprecations_1.Deprecations());\n        const layoutProcessor = new LayoutProcessor_1.LayoutProcessor(this.layoutProcessorsStore);\n        this.layoutTreeCrawler = new LayoutTreeCrawler_1.LayoutTreeCrawler(this.store, optionsProcessor);\n        this.nativeCommandsSender = new NativeCommandsSender_1.NativeCommandsSender();\n        this.commandsObserver = new CommandsObserver_1.CommandsObserver(this.uniqueIdProvider);\n        this.commands = new Commands_1.Commands(this.store, this.nativeCommandsSender, this.layoutTreeParser, this.layoutTreeCrawler, this.commandsObserver, this.uniqueIdProvider, optionsProcessor, layoutProcessor);\n        this.eventsRegistry = new EventsRegistry_1.EventsRegistry(this.nativeEventsReceiver, this.commandsObserver, this.componentEventsObserver);\n        this.componentEventsObserver.registerOnceForAllComponentEvents();\n    }\n    /**\n     * Every navigation component in your app must be registered with a unique name.\n     * The component itself is a traditional React component extending React.Component.\n     */\n    registerComponent(componentName, componentProvider, concreteComponentProvider) {\n        return this.componentRegistry.registerComponent(componentName, componentProvider, concreteComponentProvider);\n    }\n    /**\n     * Adds an option processor which allows option interpolation by optionPath.\n     */\n    addOptionProcessor(optionPath, processor) {\n        return this.optionProcessorsStore.addProcessor(optionPath, processor);\n    }\n    /**\n     * Method to be invoked when a layout is processed and is about to be created. This can be used to change layout options or even inject props to components.\n     */\n    addLayoutProcessor(processor) {\n        return this.layoutProcessorsStore.addProcessor(processor);\n    }\n    setLazyComponentRegistrator(lazyRegistratorFn) {\n        this.store.setLazyComponentRegistrator(lazyRegistratorFn);\n    }\n    /**\n     * Utility helper function like registerComponent,\n     * wraps the provided component with a react-redux Provider with the passed redux store\n     * @deprecated\n     */\n    registerComponentWithRedux(componentName, getComponentClassFunc, ReduxProvider, reduxStore) {\n        console.warn('registerComponentWithRedux is deprecated and will be removed in the next version! Please use Navigation.registerComponent instead. Visit the docs for more information https://wix.github.io/react-native-navigation/api/component#registering-a-component-wrapped-with-providers');\n        return this.componentRegistry.registerComponent(componentName, getComponentClassFunc, undefined, ReduxProvider, reduxStore);\n    }\n    /**\n     * Reset the app to a new layout\n     */\n    setRoot(layout) {\n        return this.commands.setRoot(layout);\n    }\n    /**\n     * Set default options to all screens. Useful for declaring a consistent style across the app.\n     */\n    setDefaultOptions(options) {\n        this.commands.setDefaultOptions(options);\n    }\n    /**\n     * Change a component's navigation options\n     */\n    mergeOptions(componentId, options) {\n        this.commands.mergeOptions(componentId, options);\n    }\n    /**\n     * Update a mounted component's props\n     */\n    updateProps(componentId, props) {\n        this.commands.updateProps(componentId, props);\n    }\n    /**\n     * Show a screen as a modal.\n     */\n    showModal(layout) {\n        return this.commands.showModal(layout);\n    }\n    /**\n     * Dismiss a modal by componentId. The dismissed modal can be anywhere in the stack.\n     */\n    dismissModal(componentId, mergeOptions) {\n        return this.commands.dismissModal(componentId, mergeOptions);\n    }\n    /**\n     * Dismiss all Modals\n     */\n    dismissAllModals(mergeOptions) {\n        return this.commands.dismissAllModals(mergeOptions);\n    }\n    /**\n     * Push a new layout into this screen's navigation stack.\n     */\n    push(componentId, layout) {\n        return this.commands.push(componentId, layout);\n    }\n    /**\n     * Pop a component from the stack, regardless of it's position.\n     */\n    pop(componentId, mergeOptions) {\n        return this.commands.pop(componentId, mergeOptions);\n    }\n    /**\n     * Pop the stack to a given component\n     */\n    popTo(componentId, mergeOptions) {\n        return this.commands.popTo(componentId, mergeOptions);\n    }\n    /**\n     * Pop the component's stack to root.\n     */\n    popToRoot(componentId, mergeOptions) {\n        return this.commands.popToRoot(componentId, mergeOptions);\n    }\n    /**\n     * Sets new root component to stack.\n     */\n    setStackRoot(componentId, layout) {\n        const children = isArray_1.default(layout) ? layout : [layout];\n        return this.commands.setStackRoot(componentId, children);\n    }\n    /**\n     * Show overlay on top of the entire app\n     */\n    showOverlay(layout) {\n        return this.commands.showOverlay(layout);\n    }\n    /**\n     * dismiss overlay by componentId\n     */\n    dismissOverlay(componentId) {\n        return this.commands.dismissOverlay(componentId);\n    }\n    /**\n     * Resolves arguments passed on launch\n     */\n    getLaunchArgs() {\n        return this.commands.getLaunchArgs();\n    }\n    /**\n     * Obtain the events registry instance\n     */\n    events() {\n        return this.eventsRegistry;\n    }\n    /**\n     * Constants coming from native\n     */\n    async constants() {\n        return await Constants_1.Constants.get();\n    }\n}\nexports.NavigationRoot = NavigationRoot;\n"]},"metadata":{},"sourceType":"script"}