{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LayoutProcessor = void 0;\n\nvar LayoutProcessor = function () {\n  function LayoutProcessor(layoutProcessorsStore) {\n    _classCallCheck(this, LayoutProcessor);\n\n    this.layoutProcessorsStore = layoutProcessorsStore;\n  }\n\n  _createClass(LayoutProcessor, [{\n    key: \"process\",\n    value: function process(layout, commandName) {\n      var processors = this.layoutProcessorsStore.getProcessors();\n      processors.forEach(function (processor) {\n        layout = processor(layout, commandName);\n      });\n      return layout;\n    }\n  }]);\n\n  return LayoutProcessor;\n}();\n\nexports.LayoutProcessor = LayoutProcessor;","map":{"version":3,"sources":["C:/Users/JHON/Documents/MEGA/LABURO/aumio/challenge-01/Aumionista/node_modules/react-native-navigation/lib/dist/processors/LayoutProcessor.js"],"names":["Object","defineProperty","exports","value","LayoutProcessor","layoutProcessorsStore","layout","commandName","processors","getProcessors","forEach","processor"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;IACMA,e;AACF,2BAAYC,qBAAZ,EAAmC;AAAA;;AAC/B,SAAKA,qBAAL,GAA6BA,qBAA7B;AACH;;;;4BACOC,M,EAAQC,W,EAAa;AACzB,UAAMC,UAAU,GAAG,KAAKH,qBAAL,CAA2BI,aAA3B,EAAnB;AACAD,MAAAA,UAAU,CAACE,OAAX,CAAmB,UAACC,SAAD,EAAe;AAC9BL,QAAAA,MAAM,GAAGK,SAAS,CAACL,MAAD,EAASC,WAAT,CAAlB;AACH,OAFD;AAGA,aAAOD,MAAP;AACH;;;;;;AAELJ,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LayoutProcessor = void 0;\nclass LayoutProcessor {\n    constructor(layoutProcessorsStore) {\n        this.layoutProcessorsStore = layoutProcessorsStore;\n    }\n    process(layout, commandName) {\n        const processors = this.layoutProcessorsStore.getProcessors();\n        processors.forEach((processor) => {\n            layout = processor(layout, commandName);\n        });\n        return layout;\n    }\n}\nexports.LayoutProcessor = LayoutProcessor;\n"]},"metadata":{},"sourceType":"script"}